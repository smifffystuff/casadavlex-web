---
name: Build and Push Website to AWS ECR
on:
  push:
    branches: [ main ]
jobs:
  build-and-push:  
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    if: ${{ false }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Automatic tagging of Release
      id: increment-git-tag
      run: |
        bash ./build/git_update.sh -v patch

    - name: Build, Tag and Push the Image to ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: casadavlex-web
        IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  push_to_hub:
    name: Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    if: ${{ false }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: casadavlex/casadavlexcomserver
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  terraform-build:
    name: Perform Terraform actions
    runs-on: ubuntu-latest
    steps: 
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Run script
        id: run-tf-script
        run: |
          bash ./build/tf_deploy.sh
        
      
      
      
        